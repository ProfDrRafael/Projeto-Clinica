/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Visao.Telas;

import Persistencia.Dao.*;
import Persistencia.Entity.Estagiario;
import Persistencia.Entity.Orientador;
import Regradenegocio.SessaoRN;
import Services.SenhaService;
import VO.SessaoVO;
import Visao.Components.PanelTemplate;
import javax.swing.*;

/**
 *
 * @author otnie
 */
public class PageConfiguracoes extends PanelTemplate {

    /**
     * Creates new form PageConfiguracoes
     */
    public PageConfiguracoes() {
        initComponents();
        carregarDadosUsuarioComBaseNaSessao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pNorth = new javax.swing.JPanel();
        lbClinica = new javax.swing.JLabel();
        lbProntuario = new javax.swing.JLabel();
        lblLogoSecretaria = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnPerfil = new javax.swing.JButton();
        btnExtra1 = new javax.swing.JButton();
        btnExtra2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lbAnoEntrada = new javax.swing.JLabel();
        lbLinhaTeorica = new javax.swing.JLabel();
        lbOrientador = new javax.swing.JLabel();
        btSalvar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        tfEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfSenha = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        tfAnoEntrada = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        tfLinhaTeorica = new javax.swing.JTextField();
        tfOrientador = new javax.swing.JTextField();

        setFocusable(false);
        setMaximumSize(new java.awt.Dimension(950, 650));
        setMinimumSize(new java.awt.Dimension(950, 650));
        setPreferredSize(new java.awt.Dimension(950, 650));

        pNorth.setBackground(new java.awt.Color(0, 102, 102));
        pNorth.setMaximumSize(new java.awt.Dimension(950, 250));
        pNorth.setMinimumSize(new java.awt.Dimension(950, 250));

        lbClinica.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lbClinica.setForeground(new java.awt.Color(255, 255, 255));
        lbClinica.setText("Clínica de Psicologia");

        lbProntuario.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lbProntuario.setForeground(new java.awt.Color(255, 255, 255));
        lbProntuario.setText("Configurações");

        lblLogoSecretaria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimidia/imagens/logoCapivasConfig (1).png"))); // NOI18N
        lblLogoSecretaria.setPreferredSize(new java.awt.Dimension(230, 230));

        javax.swing.GroupLayout pNorthLayout = new javax.swing.GroupLayout(pNorth);
        pNorth.setLayout(pNorthLayout);
        pNorthLayout.setHorizontalGroup(
            pNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pNorthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogoSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(pNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbClinica)
                    .addComponent(lbProntuario))
                .addContainerGap(523, Short.MAX_VALUE))
        );
        pNorthLayout.setVerticalGroup(
            pNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pNorthLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lbProntuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbClinica)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pNorthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogoSecretaria, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnPerfil.setText("Perfil");

        btnExtra1.setText("Extra1");
        btnExtra1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtra1ActionPerformed(evt);
            }
        });

        btnExtra2.setText("Extra2");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Dados do Usuário");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Email:");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField1.setFocusable(false);
        jTextField1.setMinimumSize(new java.awt.Dimension(72, 38));

        jButton5.setBackground(new java.awt.Color(0, 102, 102));
        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Alterar email");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Nome:");

        lbAnoEntrada.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbAnoEntrada.setText("Ano de Entrada:");

        lbLinhaTeorica.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbLinhaTeorica.setText("Linha teórica:");

        lbOrientador.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbOrientador.setText("Orientador:");

        btSalvar.setBackground(new java.awt.Color(102, 255, 102));
        btSalvar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(51, 51, 51));
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Função:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setText("Informações Acadêmicas");

        tfEmail.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tfEmail.setFocusable(false);
        tfEmail.setMinimumSize(new java.awt.Dimension(72, 38));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Senha:");

        tfSenha.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tfSenha.setFocusable(false);

        jButton7.setBackground(new java.awt.Color(0, 102, 102));
        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Alterar senha");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        tfAnoEntrada.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tfAnoEntrada.setFocusable(false);

        jTextField6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField6.setFocusable(false);

        tfLinhaTeorica.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tfLinhaTeorica.setFocusable(false);

        tfOrientador.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tfOrientador.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(322, 322, 322)
                .addComponent(btnPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExtra1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExtra2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbAnoEntrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfAnoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbOrientador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfOrientador, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btSalvar)
                            .addGap(53, 53, 53)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(470, 470, 470))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbLinhaTeorica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfLinhaTeorica, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pNorth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pNorth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExtra1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExtra2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbAnoEntrada)
                    .addComponent(tfAnoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLinhaTeorica)
                    .addComponent(tfLinhaTeorica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbOrientador)
                    .addComponent(tfOrientador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btSalvar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btnExtra1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtra1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExtra1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        JTextField tfNovoEmail = new JTextField();
        JTextField tfConfirmarEmail = new JTextField();
        JPasswordField pfSenha = new JPasswordField();

        Object[] campos = {
                "Novo email:", tfNovoEmail,
                "Confirmar email:", tfConfirmarEmail,
                "Senha atual:", pfSenha
        };

        int result = JOptionPane.showConfirmDialog(this, campos, "Alterar Email", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            String novoEmail = tfNovoEmail.getText();
            String confirmarEmail = tfConfirmarEmail.getText();
            String senhaAtual = new String(pfSenha.getPassword());

            if (!novoEmail.equals(confirmarEmail)) {
                JOptionPane.showMessageDialog(this, "Os emails não coincidem.");
                return;
            }

            if (!novoEmail.contains("@")) {
                JOptionPane.showMessageDialog(this, "Email inválido.");
                return;
            }

            SessaoVO sessao = new SessaoRN().buscarUltimaSessao();
            SenhaService senhaService = new SenhaService();

            boolean atualizado = false;

            switch (sessao.getTipo()) {
                case "Estagiario" -> {
                    EstagiarioDAO dao = new EstagiarioDAO();
                    var est = dao.buscarPorEmail(sessao.getEmail());
                    if (!senhaService.verificarSenha(senhaAtual, est.getSenha())) {
                        JOptionPane.showMessageDialog(this, "Senha atual incorreta.");
                        return;
                    }
                    est.setEmail(novoEmail);
                    dao.atualizar(est);
                    atualizado = true;
                }
                case "Orientador" -> {
                    OrientadorDAO dao = new OrientadorDAO();
                    var ori = dao.buscarPorEmail(sessao.getEmail());
                    if (!senhaService.verificarSenha(senhaAtual, ori.getSenha())) {
                        JOptionPane.showMessageDialog(this, "Senha atual incorreta.");
                        return;
                    }
                    ori.setEmail(novoEmail);
                    dao.atualizar(ori);
                    atualizado = true;
                }
                case "Secretaria" -> {
                    SecretariaDAO dao = new SecretariaDAO();
                    var sec = dao.buscarPorEmail(sessao.getEmail());
                    if (!senhaService.verificarSenha(senhaAtual, sec.getSenha())) {
                        JOptionPane.showMessageDialog(this, "Senha atual incorreta.");
                        return;
                    }
                    sec.setEmail(novoEmail);
                    dao.atualizar(sec);
                    atualizado = true;
                }
                case "Administrador" -> {
                    AdministradorDAO dao = new AdministradorDAO();
                    var adm = dao.buscarPorEmail(sessao.getEmail());
                    if (!senhaService.verificarSenha(senhaAtual, adm.getSenha())) {
                        JOptionPane.showMessageDialog(this, "Senha atual incorreta.");
                        return;
                    }
                    adm.setEmail(novoEmail);
                    dao.atualizar(adm);
                    atualizado = true;
                }
            }

            if (atualizado) {
                // Atualiza campo na tela
                tfEmail.setText(novoEmail);

                // Atualiza a sessão
                SessaoRN sessaoRN = new SessaoRN();
                SessaoVO sessaoAntiga = sessaoRN.buscarUltimaSessao();
                new SessaoDAO().deletar(sessaoAntiga.toEntity());

                SessaoVO novaSessao = new SessaoVO(null, sessaoAntiga.getNome(), novoEmail, sessaoAntiga.getTipo());
                sessaoRN.salvarSessao(novaSessao);

                JOptionPane.showMessageDialog(this, "Email atualizado com sucesso!");
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        JPasswordField pfAtual = new JPasswordField();
        JPasswordField pfNova = new JPasswordField();
        JPasswordField pfConfirm = new JPasswordField();

        Object[] campos = {
                "Senha atual:", pfAtual,
                "Nova senha:", pfNova,
                "Confirmar nova senha:", pfConfirm
        };

        int result = JOptionPane.showConfirmDialog(this, campos, "Alterar Senha", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            String senhaAtual = new String(pfAtual.getPassword());
            String novaSenha = new String(pfNova.getPassword());
            String confirmar = new String(pfConfirm.getPassword());

            if (!novaSenha.equals(confirmar)) {
                JOptionPane.showMessageDialog(this, "As novas senhas não coincidem.");
                return;
            }

            SessaoVO sessao = new SessaoRN().buscarUltimaSessao();
            SenhaService senhaService = new SenhaService();
            boolean atualizado = false;

            switch (sessao.getTipo()) {
                case "Estagiario" -> {
                    EstagiarioDAO dao = new EstagiarioDAO();
                    var usuario = dao.buscarPorEmail(sessao.getEmail());
                    if (!senhaService.verificarSenha(senhaAtual, usuario.getSenha())) {
                        JOptionPane.showMessageDialog(this, "Senha atual incorreta.");
                        return;
                    }
                    usuario.setSenha(senhaService.criptografarSenha(novaSenha));
                    dao.atualizar(usuario);
                    atualizado = true;
                }
                case "Orientador" -> {
                    OrientadorDAO dao = new OrientadorDAO();
                    var usuario = dao.buscarPorEmail(sessao.getEmail());
                    if (!senhaService.verificarSenha(senhaAtual, usuario.getSenha())) {
                        JOptionPane.showMessageDialog(this, "Senha atual incorreta.");
                        return;
                    }
                    usuario.setSenha(senhaService.criptografarSenha(novaSenha));
                    dao.atualizar(usuario);
                    atualizado = true;
                }
                case "Secretaria" -> {
                    SecretariaDAO dao = new SecretariaDAO();
                    var usuario = dao.buscarPorEmail(sessao.getEmail());
                    if (!senhaService.verificarSenha(senhaAtual, usuario.getSenha())) {
                        JOptionPane.showMessageDialog(this, "Senha atual incorreta.");
                        return;
                    }
                    usuario.setSenha(senhaService.criptografarSenha(novaSenha));
                    dao.atualizar(usuario);
                    atualizado = true;
                }
                case "Administrador" -> {
                    AdministradorDAO dao = new AdministradorDAO();
                    var usuario = dao.buscarPorEmail(sessao.getEmail());
                    if (!senhaService.verificarSenha(senhaAtual, usuario.getSenha())) {
                        JOptionPane.showMessageDialog(this, "Senha atual incorreta.");
                        return;
                    }
                    usuario.setSenha(senhaService.criptografarSenha(novaSenha));
                    dao.atualizar(usuario);
                    atualizado = true;
                }
            }

            if (atualizado) {
                JOptionPane.showMessageDialog(this, "Senha alterada com sucesso!");
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btnExtra1;
    private javax.swing.JButton btnExtra2;
    private javax.swing.JButton btnPerfil;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JLabel lbAnoEntrada;
    private javax.swing.JLabel lbClinica;
    private javax.swing.JLabel lbLinhaTeorica;
    private javax.swing.JLabel lbOrientador;
    private javax.swing.JLabel lbProntuario;
    private javax.swing.JLabel lblLogoSecretaria;
    private javax.swing.JPanel pNorth;
    private javax.swing.JTextField tfAnoEntrada;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfLinhaTeorica;
    private javax.swing.JTextField tfOrientador;
    private javax.swing.JTextField tfSenha;
    // End of variables declaration//GEN-END:variables

    private void carregarDadosUsuarioComBaseNaSessao() {
        SessaoRN sessaoRN = new SessaoRN();
        SessaoVO sessao = sessaoRN.buscarUltimaSessao();

        if (sessao == null) {
            System.out.println("Nenhuma sessão ativa.");
            return;
        }

        jTextField1.setText(sessao.getNome());
        tfEmail.setText(sessao.getEmail());
        tfSenha.setText("********");
        jTextField6.setText(sessao.getTipo());

        // Campos padrões desabilitados
        tfAnoEntrada.setText("");
        tfLinhaTeorica.setText("");
        tfOrientador.setText("");

        tfAnoEntrada.setEnabled(false); // ano
        tfLinhaTeorica.setEnabled(false); // linha teórica
        tfOrientador.setEnabled(false); // orientador
        tfAnoEntrada.setVisible(false);
        tfLinhaTeorica.setVisible(false);
        tfOrientador.setVisible(false);
        lbAnoEntrada.setVisible(false);
        lbLinhaTeorica.setVisible(false);
        lbOrientador.setVisible(false);

        switch (sessao.getTipo()) {
            case "Estagiario" -> {
                Estagiario estagiario = new EstagiarioDAO().buscarPorEmailComOrientador(sessao.getEmail());
                if (estagiario != null) {
                    tfAnoEntrada.setText(estagiario.getAno() != null ? String.valueOf(estagiario.getAno()) : "");
                    tfAnoEntrada.setEnabled(true);
                    tfAnoEntrada.setVisible(true);
                    lbAnoEntrada.setVisible(true);

                    if (estagiario.getOrientador() != null) {
                        tfLinhaTeorica.setText(estagiario.getOrientador().getLinhaTeorica());
                        tfOrientador.setText(estagiario.getOrientador().getNome());
                        tfLinhaTeorica.setEnabled(true);
                        tfLinhaTeorica.setVisible(true);
                        tfOrientador.setEnabled(true);
                        tfOrientador.setVisible(true);
                        lbLinhaTeorica.setVisible(true);
                        lbOrientador.setVisible(true);
                    }
                }
            }
            case "Orientador" -> {
                Orientador orientador = new OrientadorDAO().buscarPorEmail(sessao.getEmail());
                if (orientador != null) {
                    tfLinhaTeorica.setText(orientador.getLinhaTeorica());
                    tfLinhaTeorica.setEnabled(true);
                    tfLinhaTeorica.setVisible(true);
                }
            }
            case "Secretaria", "Administrador" -> {
                // Nada a preencher nos campos acadêmicos
            }
        }
    }

}
